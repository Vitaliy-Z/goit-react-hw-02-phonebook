{"version":3,"sources":["components/contactForm/contactForm.js","components/filter/filter.js","components/contactList/contactList.js","localStorage.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleInput","evt","newId","uuidv4","currentTarget","value","setState","handleSubmit","preventDefault","props","onFormSubmit","resetForm","this","className","onSubmit","type","onChange","Component","Filter","handleFilterInput","ContactList","query","contacts","filter","deleteContact","el","toLowerCase","includes","map","item","onClick","id","readAtLocalStorage","key","data","localStorage","getItem","undefined","JSON","parse","App","find","contact","alert","prevState","idContact","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34db62e9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./contactForm.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInput = (evt) => {\r\n    const newId = uuidv4();\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value, id: newId });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.onFormSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm() {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"label\">\r\n          Name\r\n          <input\r\n            className=\"input inputName\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleInput}\r\n          />\r\n        </label>\r\n        <label className=\"label\">\r\n          Number\r\n          <input\r\n            className=\"input\"\r\n            name=\"number\"\r\n            type=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleInput}\r\n          />\r\n        </label>\r\n\r\n        <button className=\"btnAdd\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onFormSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      <label className=\"label\">\r\n        Find contacts by name\r\n        <input\r\n          className=\"input\"\r\n          name=\"filter\"\r\n          type=\"text\"\r\n          onChange={this.props.handleFilterInput}\r\n        ></input>\r\n      </label>\r\n    );\r\n  }\r\n}\r\nFilter.propTypes = {\r\n  handleFilterInput: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./contactList.css\";\r\n\r\nfunction ContactList({ contacts, filter, deleteContact }) {\r\n  const filterItems = (query) => {\r\n    return contacts.filter((el) =>\r\n      el.name.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ul className=\"contact-list\">\r\n      {filterItems(filter).map((item) => (\r\n        <li className=\"contact-item\" key={item.id}>\r\n          <p className=\"contact-item__text\">\r\n            {item.name} :\r\n            <span className=\"contact-item__number\">{item.number}</span>\r\n          </p>\r\n          <button\r\n            className=\"btnDelete\"\r\n            type=\"button\"\r\n            onClick={() => deleteContact(item.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","function saveToLocalStorage(key, value) {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n}\r\n\r\nfunction readAtLocalStorage(key) {\r\n  const data = localStorage.getItem(key);\r\n  const res = data === null ? undefined : JSON.parse(data);\r\n  return res;\r\n}\r\n\r\nexport { saveToLocalStorage, readAtLocalStorage };\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./components/contactForm/contactForm\";\r\nimport Filter from \"./components/filter/filter\";\r\nimport ContactList from \"./components/contactList/contactList\";\r\nimport \"./App.css\";\r\nimport { saveToLocalStorage, readAtLocalStorage } from \"./localStorage\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (readAtLocalStorage(\"contacts\")) {\r\n      this.setState({ contacts: readAtLocalStorage(\"contacts\") });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      saveToLocalStorage(\"contacts\", this.state.contacts);\r\n    }\r\n  }\r\n\r\n  onFormSubmit = (data) => {\r\n    if (data.name === \"\" && data.number === \"\") {\r\n      alert(\"Please, enter name and number\");\r\n      return;\r\n    }\r\n\r\n    this.state.contacts.find(\r\n      (contact) => contact.name.toLowerCase() === data.name.toLowerCase()\r\n    )\r\n      ? alert(data.name + \" is already in contacts\")\r\n      : this.setState((prevState) => ({\r\n          contacts: [...prevState.contacts, data],\r\n        }));\r\n  };\r\n\r\n  handleFilterInput = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  deleteContact = (idContact) =>\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== idContact\r\n      ),\r\n    }));\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">phonebook</h1>\r\n        <ContactForm onFormSubmit={this.onFormSubmit} />\r\n        <h2 className=\"title-contacts\">contacts</h2>\r\n        <Filter handleFilterInput={this.handleFilterInput} />\r\n        <ContactList\r\n          contacts={this.state.contacts}\r\n          filter={this.state.filter}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}